<?xml version="1.0" encoding="UTF-8" ?>
<ruleset name="pcsg-generated-ruleset">
    <description>Created with the PHP Coding Standard Generator. http://edorian.github.com/php-coding-standard-generator/
    </description>
    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="Generic.CodeAnalysis.EmptyStatement" />
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier" />
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter" />
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="Generic.Files.ByteOrderMark" />
    <rule ref="Generic.Files.LineEndings" />
    <rule ref="Generic.Files.LineLength" />
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.MultipleStatementAlignment" />
    <rule ref="Generic.Formatting.NoSpaceAfterCast" />
    <rule ref="Generic.Functions.CallTimePassByReference" />
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman" />
    <rule ref="Generic.Metrics.CyclomaticComplexity" />
    <rule ref="Generic.Metrics.NestingLevel" />
    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.ForbiddenFunctions" />
    <rule ref="Generic.PHP.LowerCaseConstant" />
    <rule ref="Generic.PHP.NoSilencedErrors" />
    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="allowMultiline" value="true" />
            <property name="error" value="false" />
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent" />
    <rule ref="Generic.WhiteSpace.ScopeIndent" />
    <rule ref="MySource.PHP.EvalObjectFactory" />
    <rule ref="PEAR.Classes.ClassDeclaration" />
    <rule ref="PEAR.Commenting.FileComment" />
    <rule ref="PEAR.Commenting.FunctionComment" />
    <rule ref="PEAR.Commenting.InlineComment" />
    <rule ref="PEAR.ControlStructures.ControlSignature" />
    <rule ref="PEAR.ControlStructures.MultiLineCondition" />
    <rule ref="PEAR.Files.IncludingFile" />
    <rule ref="PEAR.Formatting.MultiLineAssignment" />
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace" />
    <rule ref="PSR1.Classes.ClassDeclaration" />
    <rule ref="PSR1.Files.SideEffects" />
    <rule ref="PSR2.Classes.ClassDeclaration" />
    <rule ref="PSR2.Classes.PropertyDeclaration" />
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing" />
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration" />
    <rule ref="PSR2.ControlStructures.SwitchDeclaration" />
    <rule ref="PSR2.Files.EndFileNewline" />
    <rule ref="PSR2.Methods.MethodDeclaration" />
    <rule ref="PSR2.Namespaces.NamespaceDeclaration" />
    <rule ref="PSR2.Namespaces.UseDeclaration" />
    <rule ref="Squiz.PHP.CommentedOutCode" />
    <rule ref="Squiz.Scope.MemberVarScope" />
    <rule ref="Squiz.Scope.MethodScope" />
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />

    <!-- Security Code Reviews Rules -->

    <!-- Global properties -->
    <!-- Please note that not every sniff uses them and they can be overwritten by rule -->
    <!-- Paranoya mode: Will generate more alerts but will miss less vulnerabilites. Good for assisting manual code review. -->
    <config name="ParanoiaMode" value="1" />

    <!-- BadFunctions -->
    <!-- PHP functions that can lead to security issues -->
    <rule ref="Security.BadFunctions.Asserts" />
    <rule ref="Security.BadFunctions.Backticks" />
    <rule ref="Security.BadFunctions.CallbackFunctions" />
    <rule ref="Security.BadFunctions.CryptoFunctions" />
    <rule ref="Security.BadFunctions.EasyRFI" />
    <rule ref="Security.BadFunctions.EasyXSS">
        <properties>
            <!-- Comment out to follow global ParanoiaMode -->
            <property name="forceParanoia" value="1" />
        </properties>
    </rule>

    <rule ref="Security.BadFunctions.ErrorHandling" />
    <rule ref="Security.BadFunctions.FilesystemFunctions" />
    <rule ref="Security.BadFunctions.FringeFunctions" />
    <rule ref="Security.BadFunctions.FunctionHandlingFunctions" />
    <rule ref="Security.BadFunctions.Mysqli" />
    <rule ref="Security.BadFunctions.NoEvals" />
    <rule ref="Security.BadFunctions.Phpinfos" />
    <rule ref="Security.BadFunctions.PregReplace" />
    <rule ref="Security.BadFunctions.SQLFunctions" />
    <rule ref="Security.BadFunctions.SystemExecFunctions" />

    <!-- CVE -->
    <!-- Entries from CVE database from vendor PHP and bugs.php.net -->
    <rule ref="Security.CVE.20132110" />
    <rule ref="Security.CVE.20134113" />

    <!-- Misc -->
    <rule ref="Security.Misc.BadCorsHeader" />
    <rule ref="Security.Misc.IncludeMismatch" />
</ruleset>
